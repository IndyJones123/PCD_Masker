from PIL import Image
import os
import matplotlib.pyplot as plt

def clipping(intensitas):
    if intensitas < 0:
        return 0
    if intensitas > 255:
        return 255
    return intensitas

def atur_pencerahan(nilai_pencerahan, nama_setelah_disave, input_image_path, output_folder_path):
    # Buka gambar
    CITRA = Image.open(input_image_path)
    PIXEL = CITRA.load()

    ukuran_horizontal = CITRA.size[0]
    ukuran_vertikal = CITRA.size[1]

    for x in range(ukuran_horizontal):
        for y in range(ukuran_vertikal):
            R = clipping(PIXEL[x, y][0] + nilai_pencerahan)
            G = clipping(PIXEL[x, y][1] + nilai_pencerahan)
            B = clipping(PIXEL[x, y][2] + nilai_pencerahan)
            PIXEL[x, y] = (R, G, B)

    output_image_path = os.path.join(output_folder_path, nama_setelah_disave)
    CITRA.save(output_image_path)

    return output_image_path

# Path ke gambar awal
input_image_path = 'masker.jpg'

# Meminta pengguna untuk memasukkan path folder untuk menyimpan hasil citra
output_folder_path = 'C:/Users/Acer/Desktop/tugas pcd 1-3/hasil_citra_brightening'

# Pastikan folder output ada atau buat jika belum ada
if not os.path.exists(output_folder_path):
    os.makedirs(output_folder_path)

# Tampilkan gambar asli dan hasil pencerahan secara berdampingan
fig, axs = plt.subplots(1, 2, figsize=(10, 5))

# Simpan hasil citra dengan peningkatan intensitas
hasil_image_path = atur_pencerahan(80, 'gambar_dicerahkan.jpg', input_image_path, output_folder_path)

# Tampilkan gambar asli
axs[0].imshow(Image.open(input_image_path))
axs[0].set_title('Gambar Asli')

# Tampilkan hasil citra dicerahkan
axs[1].imshow(Image.open(hasil_image_path))
axs[1].set_title('Gambar Dicerahkan')

# Sembunyikan sumbu
axs[0].axis('off')
axs[1].axis('off')

plt.tight_layout()
plt.show()

print('Hasil citra telah disimpan di folder:', output_folder_path)
